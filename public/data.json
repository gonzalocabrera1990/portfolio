[
    {
        "name": "Red Social - Modelo Instagram",
        "description": "Se desarrolló las características de esta red social con un diseñó más personal.",
        "link": "https://youtu.be/oqHR4m2FGgI",
        "iconWatch": "/portfolio/assets/youtube-svg.svg",
        "image": "/portfolio/assets/102shot.png",
        "descriptionDetail": "Para desarrollar esta aplicación, se diseñó la estructura de la base de datos en MongoDB utilizando Mongoose. Utilizamos Node.js para ejecutar el servidor y gestionar las solicitudes del cliente, creando las rutas de la API en Express.js. En el lado del cliente, se utilizó React para crear la interfaz de usuario y Redux para la gestión del estado de la aplicación. Además, para el diseño de la interfaz se utilizó CSS puro y componentes y estilos CSS predefinidos de Bootstrap. Por último, para habilitar la comunicación en tiempo real y características colaborativas, integramos Socket.IO, permitiendo a los usuarios interactuar en tiempo real en nuestra aplicación.",
        "imageContent": ["/portfolio/assets/100shot.png", "/portfolio/assets/101shot.png", "/portfolio/assets/102shot.png", "/portfolio/assets/103shot.png", "/portfolio/assets/104shot.png"]
    },
    {
        "name": "Red Social - Angular",
        "description": "Modelo de red social, inspirado en instagram, pero con las características de Angular.",
        "link": "https://youtu.be/KxUl_SGbKXk",
        "iconWatch": "/portfolio/assets/youtube-svg.svg",
        "image": "/portfolio/assets/902shot.png",
        "descriptionDetail": "Para desarrollar esta aplicación, se diseñó la estructura de la base de datos en MongoDB utilizando Mongoose. Utilizamos Node.js para ejecutar el servidor y gestionar las solicitudes del cliente, creando las rutas de la API en Express.js. En el lado del cliente, se utilizó el framework Angular para crear la interfaz de usuario y NgRx Store para la gestión del estado de la aplicación. Los estilos de la interfaz se utilizó CSS puro y componentes de Angular Material. Por último, para habilitar la comunicación en tiempo real y características colaborativas, integramos Socket.IO, permitiendo a los usuarios interactuar en tiempo real en nuestra aplicación.",
        "imageContent": ["/portfolio/assets/900shot.png", "/portfolio/assets/901shot.png", "/portfolio/assets/902shot.png", "/portfolio/assets/903shot.png", "/portfolio/assets/904shot.png", "/portfolio/assets/905shot.png"]
    },
    {
        "name": "Red Social - React Native",
        "description": "Se desarrolló las características de red social con el uso de componentes mobile para Android.",
        "link": "https://youtu.be/oqHR4m2FGgI",
        "iconWatch": "/portfolio/assets/youtube-svg.svg",
        "image": "/portfolio/assets/201shot.png",
        "descriptionDetail": "Para desarrollar esta aplicación, se diseñó la estructura de la base de datos en MongoDB utilizando Mongoose. Utilizamos Node.js para ejecutar el servidor y gestionar las solicitudes del cliente, creando las rutas de la API en Express.js. En el lado del cliente, se utilizó React Native Expo para crear la interfaz de usuario y Redux para la gestión del estado de la aplicación. Además, para el diseño de la interfaz se utilizó CSS puro. Por último, para habilitar la comunicación en tiempo real y características colaborativas, integramos Socket.IO, permitiendo a los usuarios interactuar en tiempo real en nuestra aplicación.",
        "imageContent": ["/portfolio/assets/200shot.png", "/portfolio/assets/201shot.png", "/portfolio/assets/202shot.png", "/portfolio/assets/203shot.png", "/portfolio/assets/204shot.png"]
    },
    {
        "name": "Codifica tu viaje",
        "description": "Proyecto final del curso 'Desarrollo Web Inicial' dictado por la universidad UTN durante el Argentina Programa 4.0.",
        "link": "https://gonzalocabrera1990.github.io/landingpage-utn-ap/",
        "iconWatch": "/portfolio/assets/browser-com.svg",
        "image": "/portfolio/assets/0shot.png",
        "descriptionDetail": "Esta 'Landing Page' fue diseñó como proyecto final durante el curso 'Desarrollo Web Inicial' dictado por la universidad UTN durante el Argentina Programa 4.0. Su interfaz de usuario fue desarrollada puramente con las tecnologías básicas aprendidas: HTML, CSS y Javascript. Además, se le agregó una funcionalidad para mostrar el pronóstico del tiempo. Para la cual se utiliza la API weatherapi.com. Luego, para mostrar de manera grafica el pronóstico, se implementó el uso de los iconos Bootstrap.",
        "imageContent": ["/portfolio/assets/0shot.png", "/portfolio/assets/1shot.png", "/portfolio/assets/2shot.png", "/portfolio/assets/3shot.png"]
    },
    {
        "name": "App del tiempo",
        "description": "Aplicación del pronóstico del tiempo utilizando la API weatherapi.com.",
        "link": "https://youtu.be/eZxP9S7J6y8",
        "iconWatch": "/portfolio/assets/youtube-svg.svg",
        "image": "/portfolio/assets/502shot.png",
        "descriptionDetail": "Aplicación que muestra gráficamente los diferentes datos que nos devuelve la API weatherapi.com. Para el lado del cliente, se utilizó la herramienta create React Vite. Mediante formulario de por medio hacemos uso de la librería 'country-state-city', la cual no solo nos brinda la posibilidad de mostrar los países, estados y ciudades a través de un input select, sino también recuperar la latitud y longitud de la ciudad elegida. A través de estos datos usamos la ruta de la api 'GET' que usa esta especificidad de latitud y longitud. Luego, para mostrar de manera grafica el pronóstico, se implementó el uso de los iconos Bootstrap. A su vez, muestra background-image dinámico dependiendo del tiempo pronosticado y momento del día.",
        "imageContent": ["/portfolio/assets/500shot.png", "/portfolio/assets/501shot.png", "/portfolio/assets/502shot.png", "/portfolio/assets/503shot.png", "/portfolio/assets/504shot.png"]
    },
    {
        "name": "TODO App",
        "description": "Se crean tanto listas y tareas personales, como tareas grupales asignadas a cada integrante.",
        "link": "https://youtu.be/7ih9IcGhG6Q",
        "iconWatch": "/portfolio/assets/youtube-svg.svg",
        "image": "/portfolio/assets/303shot.png",
        "descriptionDetail": "Este proyecto está basado en la aplicación de escritorio 'To Do' ofrecida por Microsoft. Además se le agregó otra funcionalidad que es el uso de grupos compartidos en donde un líder asigna tareas a otros usuarios. Para desarrollar esta aplicación, se diseñó la estructura de la base de datos en MongoDB utilizando Mongoose. Utilizamos Node.js para ejecutar el servidor y gestionar las solicitudes del cliente, creando las rutas de la API en Express.js. En el lado del cliente, se utilizó la herramienta create React Vite para la interfaz de usuario. Y Redux para la gestión del estado de la aplicación. El diseño de la interfaz fue a través de CSS puro.",
        "imageContent": ["/portfolio/assets/300shot.png", "/portfolio/assets/301shot.png", "/portfolio/assets/302shot.png", "/portfolio/assets/303shot.png", "/portfolio/assets/304shot.png", "/portfolio/assets/305shot.png"]
    }
]